{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2","program":"/home/sabasit/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","adler","/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1bd83e35f973edb7","-C","extra-filename=-1bd83e35f973edb7","--out-dir","/mnt/sda5/sabasit/Documents/IOT/SelfStudy/tempAPI/tempAPI/target/rls/debug/deps","-L","dependency=/mnt/sda5/sabasit/Documents/IOT/SelfStudy/tempAPI/tempAPI/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/sabasit/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/mnt/sda5/sabasit/Documents/IOT/SelfStudy/tempAPI/tempAPI/target/rls/debug/deps/libadler-1bd83e35f973edb7.rmeta"},"prelude":{"crate_id":{"name":"adler","disambiguator":[16836785016347027855,18299074726168176395]},"crate_root":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src","external_crates":[{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}}],"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":0,"byte_end":7949,"line_start":1,"line_end":250,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":0,"byte_end":7949,"line_start":1,"line_end":250,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":19},{"krate":0,"index":25},{"krate":0,"index":24},{"krate":0,"index":22},{"krate":0,"index":6},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18}],"decl_id":null,"docs":" Adler-32 checksum implementation.","sig":null,"attributes":[{"value":"! Adler-32 checksum implementation.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This implementation features:","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":42,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - Permissively licensed (0BSD) clean-room implementation.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":80,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"! - Zero dependencies.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":142,"byte_end":166,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"! - Decent performance (3-4 GB/s).","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":167,"byte_end":203,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"! - `#![no_std]` support (with `default-features = false`).","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":204,"byte_end":265,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":504,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"no_std","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":578,"byte_end":584,"line_start":15,"line_end":15,"column_start":35,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":19},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1509,"byte_end":1516,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Adler32","qualname":"::Adler32","value":"Adler32 {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" Adler-32 checksum calculator.","sig":null,"attributes":[{"value":"/ Adler-32 checksum calculator.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":723,"byte_end":756,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":757,"byte_end":760,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ An instance of this type is equivalent to an Adler-32 checksum: It can be created in the default","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":761,"byte_end":861,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/ state via [`new`] (or the provided `Default` impl), or from a precalculated checksum via","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":862,"byte_end":954,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ [`from_checksum`], and the currently stored checksum can be fetched via [`checksum`].","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":955,"byte_end":1044,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1045,"byte_end":1048,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type also implements `Hasher`, which makes it easy to calculate Adler-32 checksums of any","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1049,"byte_end":1147,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ type that implements or derives `Hash`. This also allows using Adler-32 in a `HashMap`, although","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1148,"byte_end":1248,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ that is not recommended (while every checksum is a hash, they are not necessarily good at being","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1249,"byte_end":1348,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/ one).","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1349,"byte_end":1358,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1363,"byte_end":1387,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/ [`from_checksum`]: #method.from_checksum","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1388,"byte_end":1432,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ [`checksum`]: #method.checksum","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1433,"byte_end":1467,"line_start":38,"line_end":38,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1646,"byte_end":1649,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Adler32>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Adler-32 instance with default state.\n","sig":null,"attributes":[{"value":"/ Creates a new Adler-32 instance with default state.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1565,"byte_end":1620,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1625,"byte_end":1634,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2442,"byte_end":2455,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"from_checksum","qualname":"<Adler32>::from_checksum","value":"pub fn from_checksum(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an `Adler32` instance from a precomputed Adler-32 checksum.","sig":null,"attributes":[{"value":"/ Creates an `Adler32` instance from a precomputed Adler-32 checksum.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1697,"byte_end":1768,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1773,"byte_end":1776,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This allows resuming checksum calculation without having to keep the `Adler32` instance","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1781,"byte_end":1872,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ around.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1877,"byte_end":1888,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1893,"byte_end":1896,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1901,"byte_end":1914,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1919,"byte_end":1922,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1927,"byte_end":1934,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use adler::Adler32;","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1939,"byte_end":1964,"line_start":60,"line_end":60,"column_start":5,"column_end":30}},{"value":"/ let parts = [","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1969,"byte_end":1986,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/     \"rust\",","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1991,"byte_end":2006,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     \"acean\",","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2011,"byte_end":2027,"line_start":63,"line_end":63,"column_start":5,"column_end":21}},{"value":"/ ];","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2032,"byte_end":2038,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/ let whole = adler::adler32_slice(b\"rustacean\");","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2043,"byte_end":2094,"line_start":65,"line_end":65,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2099,"byte_end":2102,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut sum = Adler32::new();","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2107,"byte_end":2140,"line_start":67,"line_end":67,"column_start":5,"column_end":38}},{"value":"/ sum.write_slice(parts[0].as_bytes());","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2145,"byte_end":2186,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ let partial = sum.checksum();","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2191,"byte_end":2224,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2229,"byte_end":2232,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // ...later","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2237,"byte_end":2252,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2257,"byte_end":2260,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let mut sum = Adler32::from_checksum(partial);","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2265,"byte_end":2315,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/ sum.write_slice(parts[1].as_bytes());","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2320,"byte_end":2361,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(sum.checksum(), whole);","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2366,"byte_end":2404,"line_start":75,"line_end":75,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2409,"byte_end":2416,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2421,"byte_end":2430,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2661,"byte_end":2669,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"checksum","qualname":"<Adler32>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum at this point in time.\n","sig":null,"attributes":[{"value":"/ Returns the calculated checksum at this point in time.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2577,"byte_end":2635,"line_start":85,"line_end":85,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2640,"byte_end":2649,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2938,"byte_end":2949,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"write_slice","qualname":"<Adler32>::write_slice","value":"pub fn write_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Adds `bytes` to the checksum calculation.","sig":null,"attributes":[{"value":"/ Adds `bytes` to the checksum calculation.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2751,"byte_end":2796,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2801,"byte_end":2804,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If efficiency matters, this should be called with Byte slices that contain at least a few","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2809,"byte_end":2902,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/ thousand Bytes.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":2907,"byte_end":2926,"line_start":94,"line_end":94,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":5085,"byte_end":5098,"line_start":157,"line_end":157,"column_start":8,"column_end":21},"name":"adler32_slice","qualname":"::adler32_slice","value":"pub fn adler32_slice(&[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Adler-32 checksum of a byte slice.\n","sig":null,"attributes":[{"value":"/ Calculates the Adler-32 checksum of a byte slice.","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":5024,"byte_end":5077,"line_start":156,"line_end":156,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1551,"byte_end":1558,"line_start":45,"line_end":45,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":4739,"byte_end":4746,"line_start":138,"line_end":138,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":4846,"byte_end":4853,"line_start":145,"line_end":145,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":1551,"byte_end":1558,"line_start":45,"line_end":45,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":4739,"byte_end":4746,"line_start":138,"line_end":138,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":1910}},{"span":{"file_name":"/home/sabasit/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.2/src/lib.rs","byte_start":4846,"byte_end":4853,"line_start":145,"line_end":145,"column_start":17,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":6394}}]}